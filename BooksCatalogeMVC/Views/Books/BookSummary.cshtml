@using BooksCatalogeMVC.CustomHtlmHelpers
@model BooksCatalogeMVC.ViewModels.BookSummaryViewModel

@{
    ViewBag.Title = "BookSummary";
}

<h2 style="display:inline-block;">BookSummary</h2>
<div class="Source_link">
    <a class="btn btn-default btn_shadow" href="@Model.Book.Source" target="_blank">Book's Source</a>
</div>

<div>
    <div class="book_details">
        <h4>Book</h4>
        <div class="book_image">
        @if (Model.Book.ImagePath != null)
        {
            @Html.DisplayImage(Url.Content(Model.Book.ImagePath),"Image_Summary")
        }
        <hr />
        </div>
        <div class="book_info">
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.Book.Title)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Book.Title, new { @class = "text_hover" })
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Book.Author.FullName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Book.Author.FullName, new { @class = "text_hover" })
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Book.Country.Name)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Book.Country.Name, new { @class = "text_hover" })
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Book.Price)
                </dt>

                <dd>
                    $@Html.DisplayFor(model => model.Book.Price, new { @class = "text_hover" })
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Book.IssueDate)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Book.IssueDate, new { @class = "text_hover" })
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Book.Description)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Book.Description, "", new { @class = "text_hover" })
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Book.PageCount)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Book.PageCount,"", new { @class = "text_hover" })
                </dd>

            </dl>
        </div>
    </div>
    <div class="Review_section">
    <h4>Reviews</h4>
    @if (User.Identity.IsAuthenticated)
    {
        using (Html.BeginForm("AddReview", "Books", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            @Html.Hidden("BookId", Model.Book.Id)
            @Html.Hidden("UserId", User.Identity.Name)
            <textarea type="text" id="Text" name="Text" class="Review_input" placeholder="Add your review heare"></textarea>
            <button type="submit" class="btn btn-default btn_shadow" style="display:inline-block">Post Review</button>
        }
    }
    <div>
        @foreach (var Review in Model.Reviews)
        {
            <div class="Review">
                <label class="review_user_date">@(Review.UserName + " ( " + Review.ReviewDate.ToString() + " )" )</label>
                <div readonly class="Review_Text">@Review.Text</div>
            </div>
        }
        <div class="space"></div>
    </div>
    </div> 
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Book.Id }, new { @class = "btn btn-default btn_shadow" })
    @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-default btn_shadow" })
</p>
